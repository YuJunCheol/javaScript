자바 스크립트!

@@@@@@@@@@@ 변수
var, let, const로 선언

@@@@@@@@@@@ 연산자
+,-,*,/,%(나머지)

@@@@@@@@@@@@ 연산자 - 비교 연산자
보통 == 보다 === 를 많이 사용한다.
자바 스크립트는 == 는 값만 비교하지만 === 는 타입까지 비교한다
자바 스크립트는 int, float 등 자료형을 지정해주지 않기때문에 발생하는 발생하는 문제인거같다.

@@@@@@@@@@@@ 자바 스크립트의 Type
타입은 선언할때가 아니고, 실행 타임에 결정된다.
Dynamic Type

타입을 확인하는 방법은 또렷하게 없지만 정확하게는 toString.call을 이용해서 한다.

@@@@@@@@@@@@ 비교문
for, switch, forEach, for-of

@@@@@@@@@@@ 문자열 처리
자바스크립트는 문자와 문자열이 같다.
typeof "abc"; String
typeof 'a'; String

@@@@@@@@@@@ 함수
호이스팅 : 자바스크립트 에서의 호이스팅(hoisting)은 코드에 선언된 변수 및 함수를\
코드 상단으로 끌어올리는것을 말한다.

함수 표현식 : 함수를 변수안에 너어서 선언하는 방식
ex)
function test() {
    var funtest = function() {
        return "함수표현식";
    }
    consol.log("이거슨 "+funtest);
}
test();
///consol///
이거슨 함수표현식

이처럼 변수에 함수를 너어 사용하는 방식이지만 호출 순서에 따라 정상적으로 실행되지 않을 수 있다.
ex)
function test() {
    consol.log(printName());
    var printName = function() {
        return "성공";
    }
}

test();
///consol///
TypeError:printName is not a function

함수는 return값이 없으면 자동으로 반환값을 undifind를 한다.

함수 - arguments 속성
함수가 실행되면 그 안에서 arguments라는 특별한 지역변수가 생성된다.
arguments는 필요한 경우에만 사용한다 (사용 주의)

@@@@@@@@@@@@ window객체
window 는 전역객체라 생략 가능
window.setTimeout() == setTimeout()

setTimeout는 지연실행이 필요한 경우 사용함.
ex) 
function run() {
    setTimeout(function() {
        var msg = "hello"
        consol.log(msg);
    },2000);
    consol.log("run end");
}

consol.log("start");
run();
consol.log("end");
//// consol ////
start
run end
end

hello

setTimeout 과 비슷한 기능을 하는 메서드
setInterval()
ex)
setInterval(test, 3000); // 3초마다 test를 실행하는 동작.

@@@@@@@@@@@@ DOM(Document Object Model)
브라우저는 HTML 코드를 해석할 때 DOM이라는 객체형태의 모델로 저장한다.

DOM에 접근하기 위해 JavaScript를 사용하는데 그때 사용하는 것이 DOM API이다

- DMO API :
getElementById() : 
ex)
document.getElementById("test");
test라는 id를 가진 엘리먼트를 찾아줌 특정 속성을 찾았기때문에 그 속성에 접근하여 값 또는 style를 변경할 수 있듬.

document.querySelector(""); 이 메서드로 class ,a , div 등을 찾을수 있다.

@@@@@@@@@@@@ Event
이벤트 등록 표준방법. addEventListener
var el = document.getElementById("outside");
el.addEventListener("click", function() {
});

이때 addEventListener의 두번째 매개변수는 함수이며 이 함수를 이벤트 리스터 또는 이벤트 핸들러라고 한다.
함수의 매개변수를 통해 이벤트가 발생한 element를 가리킵니다.
ex)
var el = document.getElementById("outside");
el.addEventListener("click", function(evt) {
    consol.log(evt.target);
    consol.log(evt.target.nodeName);
},false);


@@@@@@@@@@@ Ajax (XMLHTTPRequest 통신)
이 기술은 웹에 데이터를 갱신할때, 브라우저 새로고침 없이 서버로부터 데이터를 받는것이 좋겠다는 생각에서 출발함.
- JSON : 표준적인 데이터 포맷을 결정하기 위해서 주로 JSON(JavaScript를 Object Notation)
- AJAX 실행코드
function ajax(data) {
    var oReq = new XMLHttPRequest();
    oReq.addEventListener("load", function() {
        consol.log(this.responseText);
    })

}


@@@@@@@@@@@@ JSP(Java Server Page)란?
- 등장 배경 : 
    * 마이크로 소프트에서 ASP(Active Server Page)라는 쉡게 웹개발을 할 수 있는 스크립트 (script)엔진을
    발표함(1998)
    * 1997년에 발표된 서블릿은 ASP에 비하여 상대적ㅇ로 개발 방식이 불편함
    * ASP에 대항하기 위하여 1999년 썬마이크로시스템즈에서 JSP를 발표
    * JSP는 실제로 서블릿 기술을 사용.
- 영상 정리
    간단한 jsp 실습

@@@@@@@@@@@@ JSP life cycle

jsp 파일이 실행될때 벌어지는 일
이클립스 워크스페이스 아래의 .metadata 폴더에 sum10_jsp.java파일이 생성
해당 파일의 _jspService() 메소드안을살펴보면 jsp 파일의 내용이 변환되서 들어가 있는것을 확인할 수 있다.
sum10_jsp는 서블릿 소스로 자동으로 컴파일 되면서 실행되서 그 결과가 브라우저에 보여진다.

JSP의 실행 순서
1. 브라우저가 웹서버에 JSP에 대한 요청 정보를 전달한다.
2. 브라우저가 요청한 JSP가 최초로 요청했을 경우만
    1) JSP로 작성된코드가 서블릿으로 변환 한다. (java 파일생성
    2) 서블릿 코드를 컴파일해서 실행 가능한 byrecode로 변환. (class 파일생성)
    3) 서블릿 클래스를 로딩하고 인스턴스를 생성한다.
3. 서블릿이 실행되어 요청을 처리하고 응답 정보를 생성한다.

@@@@@@@@@@@@ JSP 문법

JSP 페이지에서는 선언문(Declaration), 스크립트릿(Scriptlet), 표현식(Expression) 이라는 스크립트 요소를 제공
선언문 : <%! %> -> JSP 페이지 내에서 필요한 멤버변수나 메소드가 필요할 때 선언해 사용하는 요소
스크립트릿 : <% %> -> 주로 프로그래밍의 로직을 기술할 때 사용. 스크립트릿에서 선언된 변수는 지역변수.
표현식 : <%= %>

주석
<%-- JSP 주석 --%>
<!-- HTML 주석 -->
// 자바 주석
/* 자바 주석*/

@@@@@@@@@@@@ JSP 내장 객체

JSP를 실행하면서 서블릿 소스가 생성되고 실행된다. JSP에 입력한 대부분의 코드는 생성되는 서블릿 소스의 _jspService() 메소드 안에 삽입되는 코드로 생성된다.
_jspService()에 삽입된 코드의 윗부분에 미리 선언된 객체들이 있는데 , 해당 객체들은 jsp에서도 사용 가능하다.
response, request, application, session, out과 같은 변수를 내장객체라고 한다.


@@@@@@@@@@@@ 리다이렉트(Redirect)
HTTP 프로토콜로 정해진 규칙. URL이 변경됨

@@@@@@@@@@@@ forward
URL이 변경되지 않음.


@@@@@@@@@@@@ Servlet과 JSP연동



@@@@@@@@@@@@ Scope
4가지 Scope 
- Application
- Session
- Request
- Page

@@@@@@@@@@@ Page Scope
- JSP 페이지에서 pageContext 라는 내장객체로 사용가능.
- 페이지가 이용될때까지만 사용.
- forward가 될경우 해당 Page scope에 지정된 변수는 사용할 수 없다.
- 마치 지역변수처럼 사용된다.

@@@@@@@@@@@@ Request Scope
- http요청을 WAS가 받아 웹브라우저에게 응답할 때까지 변수값을 유지하고자 할 경우 사용.
